require 'fileutils'

USE_STLPORT = true

puts "Rhoconnect-client extension !"

namespace "build" do

  task :config do

    $targetdir = ENV['TARGET_TEMP_DIR']
    raise "TARGET_TEMP_DIR is not set" if $targetdir.nil?

    $tempdir = ENV['TEMP_FILES_DIR']
    raise "TEMP_FILES_DIR is not set" if $tempdir.nil?

    $rootdir = ENV['RHO_ROOT']
    raise "RHO_ROOT is not set" if $rootdir.nil?

    $xcodebuild = ENV['XCODEBUILD']	
    raise "XCODEBUILD is not set" if $xcodebuild.nil?
 
	  #    $configuration = ENV['CONFIGURATION']
	  #raise "CONFIGURATION is not set" if $configuration.nil?

	  #$sdk = ENV['SDK_NAME']
	  #raise "SDK_NAME is not set" if $sdk.nil?

    $bindir = ENV['PLATFORM_DEVELOPER_BIN_DIR']
    raise "PLATFORM_DEVELOPER_BIN_DIR is not set" if $bindir.nil?
    
    $sdkroot = ENV['SDKROOT']
    raise "SDKROOT is not set" if $sdkroot.nil?

    $arch = ENV['ARCHS']
    raise "ARCHS is not set" if $arch.nil?
    
	  #    $gccbin = $bindir + '/gcc-4.2'
	$gccbin = $bindir + '/gcc'

    $arbin = $bindir + '/ar'

  end

  task :all => :config do
	  
	  curdir = pwd
	  $rhoconnectclientdir = curdir.gsub('/ext/rhoconnect-client/platform/iphone','')
	  
	  src_files = []
	
	  src_files << $rhoconnectclientdir + '/ext/rhoconnect-client/shared/ruby/syncengine_wrap.c'
	  src_files << $rhoconnectclientdir + '/ext/rhoconnect-client/shared/src/rhoconnectclient.c'
	  src_files << $rhoconnectclientdir + '/ext/rhoconnect-client/shared/src/initRhoconnectClient.cpp'
	  src_files << $rhoconnectclientdir + '/ext/rhoconnect-client/shared/src/sync/ClientRegister.cpp'
	  src_files << $rhoconnectclientdir + '/ext/rhoconnect-client/shared/src/sync/SyncEngine.cpp'
	  src_files << $rhoconnectclientdir + '/ext/rhoconnect-client/shared/src/sync/SyncNotify.cpp'
	  src_files << $rhoconnectclientdir + '/ext/rhoconnect-client/shared/src/sync/SyncSource.cpp'
	  src_files << $rhoconnectclientdir + '/ext/rhoconnect-client/shared/src/sync/SyncThread.cpp'
	  
	  objects = []
	  mkdir_p $tempdir unless File.exists? $tempdir
	  
	  src_files.each do |f|
		objname = File.join( $tempdir, File.basename( f.gsub(/\.c$/, '.o') ) )
		objects << ('"'+objname+'"')
		  
		args = []
		args << "-I."
		args << "-I\"#{$rootdir}/platform/shared/ruby/include\""
		args << "-I\"#{$rootdir}/platform/shared\""
		args << "-I\"#{$rootdir}/platform/shared/common\""
	    args << "-I\"#{$rootdir}/platform/shared/sync\""
		args << "-I\"#{$rootdir}/lib/commonAPI/coreapi/ext/shared\""
		args << "-I\"#{$rhoconnectclientdir}/ext/rhoconnect-client/shared/src\""
		  
		args << "-I\"#{$rootdir}/platform/shared/ruby/iphone\""
		args << "-D_XOPEN_SOURCE"
		args << "-D_DARWIN_C_SOURCE"
		args << "-isysroot \"#{$sdkroot}\""
		args << "-fno-common"
		args << "-arch #{$arch}"
		args << "-O2"
		args << "-o \"#{objname}\""
		args << "-c"
		args << f
		cmdline = $gccbin + ' ' + args.join(' ')
		puts cmdline
		puts `#{cmdline}`
		exit unless $? == 0
	  end
	  
	  mkdir_p $targetdir unless File.exist? $targetdir
	  
	  args = []
	  args << 'rcs'
	  args << File.join( $targetdir, 'lib' + "rhoconnect-client" + '.a' )
	  args += objects
	  cmdline = $arbin + ' ' + args.join(' ')
	  puts cmdline
	  puts `#{cmdline}`
	  exit unless $? == 0
  end


end

task :default => "build:all"
